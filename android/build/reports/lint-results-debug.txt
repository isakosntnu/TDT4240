/Users/benjaminfaerestrand/Documents/DrawGuess/TDT4240 copy/android/AndroidManifest.xml:16: Warning: Redundant label can be removed [RedundantLabel]
        android:label="@string/app_name"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "RedundantLabel":
   When an activity does not have a label attribute, it will use the one from
   the application tag. Since the application has already specified the same
   label, the label on this activity can be omitted.

/Users/benjaminfaerestrand/Documents/DrawGuess/TDT4240 copy/android/AndroidManifest.xml:17: Warning: Expecting android:screenOrientation="unspecified" or "fullSensor" for this activity so the user can use the application in any orientation and provide a great experience on Chrome OS devices [LockedOrientationActivity]
        android:screenOrientation="portrait"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "LockedOrientationActivity":
   The <activity> element should not be locked to any orientation so that
   users can take advantage of the multi-window environments and larger
   screens available on Android. To fix the issue, consider declaring the
   corresponding activity element with `screenOrientation="unspecified"or
   "fullSensor"` attribute.

   https://developer.android.com/topic/arc/window-management

/Users/benjaminfaerestrand/Documents/DrawGuess/TDT4240 copy/android/AndroidManifest.xml:17: Warning: Should not restrict activity to fixed orientation. This may not be suitable for different form factors, causing the app to be letterboxed. [DiscouragedApi]
        android:screenOrientation="portrait"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "DiscouragedApi":
   Discouraged APIs are allowed and are not deprecated, but they may be unfit
   for common use (e.g. due to slow performance or subtle behavior).

/Users/benjaminfaerestrand/Documents/DrawGuess/TDT4240 copy/android/AndroidManifest.xml:7: Warning: The attribute android:fullBackupContent is deprecated from Android 12 and higher and may be removed in future versions. Consider adding the attribute android:dataExtractionRules specifying an @xml resource which configures cloud backups and device transfers on Android 12 and higher. [DataExtractionRules]
      android:fullBackupContent="true"
                                 ~~~~

   Explanation for issues of type "DataExtractionRules":
   Before Android 12, the attributes android:allowBackup and
   android:fullBackupContent were used to configure all forms of backup,
   including cloud backups, device-to-device transfers and adb backup.

   In Android 12 and higher, these attributes have been deprecated and will
   only apply to cloud backups. You should instead use the attribute
   android:dataExtractionRules, specifying an @xml resource that configures
   which files to back up, for cloud backups and for device-to-device
   transfers, separately. If your minSdkVersion supports older versions,
   you'll still want to specify an android:fullBackupContent resource if the
   default behavior is not right for your app.

   https://developer.android.com/about/versions/12/backup-restore#xml-changes
   https://goo.gle/DataExtractionRules

/Users/benjaminfaerestrand/Documents/DrawGuess/TDT4240 copy/android/res/values/color.xml:3: Warning: The resource R.color.ic_background_color appears to be unused [UnusedResources]
    <color name="ic_background_color">#F5A623FF</color>
           ~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

/Users/benjaminfaerestrand/Documents/DrawGuess/TDT4240 copy/android/res/drawable-hdpi/ic_launcher.png: Warning: Launcher icons should not fill every pixel of their square region; see the design guide for details [IconLauncherShape]
/Users/benjaminfaerestrand/Documents/DrawGuess/TDT4240 copy/android/res/drawable-mdpi/ic_launcher.png: Warning: Launcher icons should not fill every pixel of their square region; see the design guide for details [IconLauncherShape]
/Users/benjaminfaerestrand/Documents/DrawGuess/TDT4240 copy/android/res/drawable-xhdpi/ic_launcher.png: Warning: Launcher icons should not fill every pixel of their square region; see the design guide for details [IconLauncherShape]
/Users/benjaminfaerestrand/Documents/DrawGuess/TDT4240 copy/android/res/drawable-xxhdpi/ic_launcher.png: Warning: Launcher icons should not fill every pixel of their square region; see the design guide for details [IconLauncherShape]
/Users/benjaminfaerestrand/Documents/DrawGuess/TDT4240 copy/android/res/drawable-xxxhdpi/ic_launcher.png: Warning: Launcher icons should not fill every pixel of their square region; see the design guide for details [IconLauncherShape]

   Explanation for issues of type "IconLauncherShape":
   According to the Android Design Guide
   (https://d.android.com/r/studio-ui/designer/material/iconography) your
   launcher icons should "use a distinct silhouette", a "three-dimensional,
   front view, with a slight perspective as if viewed from above, so that
   users perceive some depth."

   The unique silhouette implies that your launcher icon should not be a
   filled square.

0 errors, 10 warnings
